name: Swift

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  SWIFTLY_INIT: init --skip-install --quiet-shell-followup --verbose
  SWIFTLY_INSTALL: install --use --verbose
  SWIFTLY_DL: https://download.swift.org/swiftly

jobs:
  build:
    strategy:
      matrix:
        os: ["macos-latest", "ubuntu-latest"]
        swift-version: ["6.1", "6.0"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.swift-version }}/${{ matrix.os }}
    steps:
      - uses: actions/checkout@master

      - name: Install/macOS
        if: ${{ startsWith( matrix.os, 'macos' ) }}
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/..
          curl -O $SWIFTLY_DL/darwin/swiftly.pkg
          installer -pkg swiftly.pkg -target CurrentUserHomeDirectory
          ~/.swiftly/bin/swiftly $SWIFTLY_INIT
          ~/.swiftly/bin/swiftly $SWIFTLY_INSTALL ${{ matrix.swift-version }}

      - name: Install/Linux
        if: ${{ startsWith( matrix.os, 'ubuntu' ) }}
        shell: bash
        run: |
          sudo apt-get -y install libcurl4-openssl-dev
          cd $GITHUB_WORKSPACE/..
          curl -O $SWIFTLY_DL/linux/swiftly-$(uname -m).tar.gz
          tar zxf swiftly-$(uname -m).tar.gz
          $GITHUB_WORKSPACE/swiftly $SWIFTLY_INIT
          $GITHUB_WORKSPACE/swiftly $SWIFTLY_INSTALL ${{ matrix.swift-version }}

      - name: Info
        shell: bash
        run: |
          . ~/.local/share/swiftly/env.sh && hash -r
          cd swift
          swift --version -v

      - name: Build
        shell: bash
        run: |
          . ~/.local/share/swiftly/env.sh && hash -r
          cd swift
          swift build -v

      - name: Test
        shell: bash
        run: |
          . ~/.local/share/swiftly/env.sh && hash -r
          cd swift
          swift test -v
